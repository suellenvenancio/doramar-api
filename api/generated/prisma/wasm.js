
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.3
 * Query Engine version: bb420e667c1820a8c05a38023385f6cc7ef8e83a
 */
Prisma.prismaVersion = {
  client: "6.16.3",
  engine: "bb420e667c1820a8c05a38023385f6cc7ef8e83a"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.TvShowsScalarFieldEnum = {
  id: 'id',
  title: 'title',
  synopsis: 'synopsis',
  cast: 'cast',
  poster: 'poster',
  premiereDate: 'premiereDate',
  originalName: 'originalName',
  createdAt: 'createdAt'
};

exports.Prisma.GenresScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.TvShowGenresScalarFieldEnum = {
  id: 'id',
  tvShowId: 'tvShowId',
  genreId: 'genreId'
};

exports.Prisma.UsersScalarFieldEnum = {
  id: 'id',
  name: 'name',
  email: 'email',
  username: 'username',
  password: 'password',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ListTvShowScalarFieldEnum = {
  id: 'id',
  listId: 'listId',
  tvShowId: 'tvShowId',
  addedAt: 'addedAt',
  order: 'order'
};

exports.Prisma.ListsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RatingScaleScalarFieldEnum = {
  id: 'id',
  label: 'label'
};

exports.Prisma.RatingsScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  tvShowId: 'tvShowId',
  scaleId: 'scaleId',
  comment: 'comment'
};

exports.Prisma.ActorsOnTvShowsScalarFieldEnum = {
  id: 'id',
  tvShowId: 'tvShowId',
  actorId: 'actorId'
};

exports.Prisma.ActorsScalarFieldEnum = {
  id: 'id',
  name: 'name'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  TvShows: 'TvShows',
  Genres: 'Genres',
  TvShowGenres: 'TvShowGenres',
  Users: 'Users',
  ListTvShow: 'ListTvShow',
  Lists: 'Lists',
  RatingScale: 'RatingScale',
  Ratings: 'Ratings',
  ActorsOnTvShows: 'ActorsOnTvShows',
  Actors: 'Actors'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/suellenvenanciodasilva/Documents/k-drama-api/src/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/suellenvenanciodasilva/Documents/k-drama-api/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.3",
  "engineVersion": "bb420e667c1820a8c05a38023385f6cc7ef8e83a",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel TvShows {\n  id           String            @id @default(uuid())\n  title        String\n  synopsis     String\n  cast         String\n  poster       String\n  premiereDate DateTime          @map(\"premiereDate\")\n  originalName String            @map(\"originalName\")\n  tvshowGenres TvShowGenres[]\n  lists        ListTvShow[]\n  ratings      Ratings[]\n  actors       ActorsOnTvShows[]\n  createdAt    DateTime          @default(now()) @map(\"createdAt\")\n}\n\nmodel Genres {\n  id           String         @id @default(uuid())\n  name         String\n  tvshowGenres TvShowGenres[]\n}\n\nmodel TvShowGenres {\n  id       String  @id @default(uuid())\n  tvShow   TvShows @relation(fields: [tvShowId], references: [id], onDelete: Cascade)\n  tvShowId String  @map(\"tvShowId\")\n  genre    Genres  @relation(fields: [genreId], references: [id], onDelete: Cascade)\n  genreId  String  @map(\"genreId\")\n}\n\nmodel Users {\n  id        String    @id @default(uuid())\n  name      String\n  email     String    @unique\n  username  String    @unique\n  password  String\n  createdAt DateTime  @default(now())\n  updatedAt DateTime  @updatedAt\n  list      Lists[]\n  ratings   Ratings[]\n\n  @@map(\"users\")\n}\n\nmodel ListTvShow {\n  id       String   @id @default(uuid())\n  list     Lists    @relation(fields: [listId], references: [id])\n  listId   String\n  tvShow   TvShows  @relation(fields: [tvShowId], references: [id])\n  tvShowId String\n  addedAt  DateTime @default(now())\n  order    Int      @default(0)\n}\n\nmodel Lists {\n  id        String       @id @default(uuid())\n  name      String\n  user      Users        @relation(fields: [userId], references: [id])\n  userId    String\n  tvShows   ListTvShow[]\n  createdAt DateTime     @default(now())\n  updatedAt DateTime     @updatedAt\n}\n\nmodel RatingScale {\n  id      Int       @id @default(autoincrement())\n  label   String\n  ratings Ratings[]\n}\n\nmodel Ratings {\n  id       String  @id @default(uuid())\n  userId   String\n  tvShowId String\n  scaleId  Int\n  comment  String?\n\n  user   Users       @relation(fields: [userId], references: [id])\n  tvShow TvShows     @relation(fields: [tvShowId], references: [id])\n  scale  RatingScale @relation(fields: [scaleId], references: [id])\n}\n\nmodel ActorsOnTvShows {\n  id       String  @id @default(uuid())\n  tvShow   TvShows @relation(fields: [tvShowId], references: [id], onDelete: Cascade)\n  tvShowId String\n  actor    Actors  @relation(fields: [actorId], references: [id], onDelete: Cascade)\n  actorId  String\n}\n\nmodel Actors {\n  id      String            @id @default(uuid())\n  name    String\n  tvShows ActorsOnTvShows[]\n}\n",
  "inlineSchemaHash": "e2cfccce02a820f4ca7c00d789a00b893517687a527e854620b7db793e1af204",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"TvShows\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"synopsis\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cast\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"poster\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"premiereDate\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"premiereDate\"},{\"name\":\"originalName\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"originalName\"},{\"name\":\"tvshowGenres\",\"kind\":\"object\",\"type\":\"TvShowGenres\",\"relationName\":\"TvShowGenresToTvShows\"},{\"name\":\"lists\",\"kind\":\"object\",\"type\":\"ListTvShow\",\"relationName\":\"ListTvShowToTvShows\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Ratings\",\"relationName\":\"RatingsToTvShows\"},{\"name\":\"actors\",\"kind\":\"object\",\"type\":\"ActorsOnTvShows\",\"relationName\":\"ActorsOnTvShowsToTvShows\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\",\"dbName\":\"createdAt\"}],\"dbName\":null},\"Genres\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvshowGenres\",\"kind\":\"object\",\"type\":\"TvShowGenres\",\"relationName\":\"GenresToTvShowGenres\"}],\"dbName\":null},\"TvShowGenres\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShow\",\"kind\":\"object\",\"type\":\"TvShows\",\"relationName\":\"TvShowGenresToTvShows\"},{\"name\":\"tvShowId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"tvShowId\"},{\"name\":\"genre\",\"kind\":\"object\",\"type\":\"Genres\",\"relationName\":\"GenresToTvShowGenres\"},{\"name\":\"genreId\",\"kind\":\"scalar\",\"type\":\"String\",\"dbName\":\"genreId\"}],\"dbName\":null},\"Users\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"username\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"list\",\"kind\":\"object\",\"type\":\"Lists\",\"relationName\":\"ListsToUsers\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Ratings\",\"relationName\":\"RatingsToUsers\"}],\"dbName\":\"users\"},\"ListTvShow\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"list\",\"kind\":\"object\",\"type\":\"Lists\",\"relationName\":\"ListTvShowToLists\"},{\"name\":\"listId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShow\",\"kind\":\"object\",\"type\":\"TvShows\",\"relationName\":\"ListTvShowToTvShows\"},{\"name\":\"tvShowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"addedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"order\",\"kind\":\"scalar\",\"type\":\"Int\"}],\"dbName\":null},\"Lists\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"ListsToUsers\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShows\",\"kind\":\"object\",\"type\":\"ListTvShow\",\"relationName\":\"ListTvShowToLists\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"RatingScale\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"label\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ratings\",\"kind\":\"object\",\"type\":\"Ratings\",\"relationName\":\"RatingScaleToRatings\"}],\"dbName\":null},\"Ratings\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"scaleId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"comment\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"Users\",\"relationName\":\"RatingsToUsers\"},{\"name\":\"tvShow\",\"kind\":\"object\",\"type\":\"TvShows\",\"relationName\":\"RatingsToTvShows\"},{\"name\":\"scale\",\"kind\":\"object\",\"type\":\"RatingScale\",\"relationName\":\"RatingScaleToRatings\"}],\"dbName\":null},\"ActorsOnTvShows\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShow\",\"kind\":\"object\",\"type\":\"TvShows\",\"relationName\":\"ActorsOnTvShowsToTvShows\"},{\"name\":\"tvShowId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actor\",\"kind\":\"object\",\"type\":\"Actors\",\"relationName\":\"ActorsToActorsOnTvShows\"},{\"name\":\"actorId\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"Actors\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tvShows\",\"kind\":\"object\",\"type\":\"ActorsOnTvShows\",\"relationName\":\"ActorsToActorsOnTvShows\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

